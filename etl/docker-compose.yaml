services:
  db:
    image: postgres:13-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ANALYST_DB_USER: ${ANALYST_DB_USER}
      ANALYST_DB_PASSWORD: ${ANALYST_DB_PASSWORD}
      MANAGER_DB_USER: ${MANAGER_DB_USER}
      MANAGER_DB_PASSWORD: ${MANAGER_DB_PASSWORD}
      ADMIN_DB_USER: ${ADMIN_DB_USER}
      ADMIN_DB_PASSWORD: ${ADMIN_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/20-init-db.sh
    networks:
      - etl_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  etl:
    build:
      context: ./etl
    container_name: etl_service
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - ANALYST_DB_USER=${ANALYST_DB_USER}
      - ANALYST_DB_PASSWORD=${ANALYST_DB_PASSWORD}
      - MANAGER_DB_USER=${MANAGER_DB_USER}
      - MANAGER_DB_PASSWORD=${MANAGER_DB_PASSWORD}
      - ADMIN_DB_USER=${ADMIN_DB_USER}
      - ADMIN_DB_PASSWORD=${ADMIN_DB_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - AUTH_USERNAME=${AUTH_USERNAME}
      - AUTH_PASSWORD=${AUTH_PASSWORD}
    volumes:
      - ./data:/data
      - ./scripts:/scripts
    depends_on:
      db:
        condition: service_healthy
    networks:
      - etl_network
    ports:
      - "5001:5000"
    command: ["flask", "run", "--host=0.0.0.0"]

volumes:
  db_data:

networks:
  etl_network: